Future ..

1. Add another screen maybe based on IntervalChart showing plot of rMSSD, NNX against sample number
	X axis would be scaled buffer length
	Y-axis selectable statistic selected by menu like current history graph
	
2. A screen showing advice based on HRV trend
	Could be a bar chart or like WHoop strap colour coded to show some status
	Could look at history and curve fit then use trend to say whether rising or falling
	possible to build a 30 day baseline (avg) on the app and give advice 
	(perhaps colour coded - red, yellow, green like seen on the whoop strap or the HRV Stress Test on Garmin devices itself) on how hard to train on a given day ? 
	Most HRV apps or Watches use some sort of Red, Green, Yellow Gauge to advice the user what to do
	
3. Widget version of app
	Could require HRV analysis app to pass history if we want to use this using change of context
	Would be limited to 2 min by watchdog
	Could capture it's own history and do screen similar to (2)
	use this widget reading to compare it against the 30 day avg baseline and use a colour coding on the widget ? To see if you should be able to train or not. 
	At best colour coded and easy to interpret
	
4. Is there also a possibility to trigger a reading 2-3 minutes before you actually wake up ? Some kind of automatic stuff

5. Another graph (DONE) - could modify to do #2 or #1
	Maybe should create a class to do this more generically!!
	Plot X as interval number segment [n..m] with m being current
	Plot Y is scaled II range: either min max or 30bpm (2000) to 150bpm (400ms) (130 bpm = 500ms)
	Colour lines or points if ectopic (LS or SL) and if over/under threshold as sometimes one sample only
	Need to invert axis as usual
	Could use new buffer method for pulse flag
	
6. New buffer for flag...
	Sample number is < 1208 so need 11 bits (2048) leaving 4 bits for flag
	Flag = OK, S, L, ?
	Buffer is circular of length N (say 20) which stores index number of sample and flag added using OR
	Could use this for rest of processing as well as graphs
	Using average this way would work ...
	
	We want to look back ignoring any samples which are SL, LS - others are OK
	Either scan entire list everytime for match (needing SL, LS to be contiguous OR
	Scan but stop if entry that is SL LS is further in past than current sample index -1 then OK
	
7. On interval buffer full force escape and save of buffer menu. Needs to stop testing etc see HRDelegate
8. Disallow menu's when testing
9. Ectopic beat is not same as long or short (it's LS or LS). Need to use terms long and short beat and then ectopic so 3 fields in stats
10. On interval plot do points every 2 pixels so half amount of data
11. Need to review all variables and ensure unique names eg in functions - add m prefix seems to fix scope  
12. Shorten strings - watch search / replace does all workspace not just project 
13. Set variables to null when finished
14. Unload custom fonts when done
15. Note when a view is hidden onHide gets called. If this nulls variables then may need to call onLayout() again.
    In onUpdate() check if variables are null before calling onLayout
